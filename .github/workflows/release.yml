name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run Semantic Release
        id: semantic_release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Issue on Failure
        if: failure() && steps.semantic_release.outcome != 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: "open",
            labels: "release-failed"
            });
    
            // Verificar si ya existe una issue abierta con el mismo título
            const issueTitle = `Error en el release de la versión ${"${{ steps.semantic_release.outputs.version || 'versión desconocida' }}"}`;
            const issueExists = issues.some(issue => issue.title === issueTitle);
    
            if (!issueExists) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: `⚠️ **Se produjo un error durante el proceso de release**.\n\n` +
                    `Detalles del error:\n\n` +
                    `- Versión: ${{ steps.semantic_release.outputs.version || 'versión desconocida' }}\n` +
                    `- Usuario que ejecutó: ${{ github.actor }}\n\n` +
                    `Por favor, revisa los logs para más detalles.`,
                labels: ["release-failed", "bug"]
              });
            }
    